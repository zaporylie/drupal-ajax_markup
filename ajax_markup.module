<?php

/**
 * Implements hook_menu().
 */
function ajax_markup_menu() {
  $items = array();
  $items['ajax-markup'] = array(
    'page callback' => 'ajax_markup',
    'access callback' => 'ajax_markup_access',
    'access arguments' => array('access ajax markup'),
    'delivery callback' => 'drupal_json_output',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function ajax_markup_permission() {
  return array(
    'access ajax markup' => array(
      'title' => t('Access ajax markup'),
    ),
  );
}

/**
 * Implements hook_library().
 */
function ajax_markup_library() {
  $libraries['ajax_markup'] = array(
    'title' => 'Ajax Markup',
    'js' => array(
      array(
        'type' => 'setting',
        'data' => array(
          'url' => url('ajax-markup'),
          'token' => drupal_get_token('ajax-markup'),
        ),
      ),
      drupal_get_path('module', 'ajax_markup') . '/ajax_markup.js' => array(),
    ),
  );
  return $libraries;
}

/**
 * Checks ajax markup access.
 */
function ajax_markup_access($string, $account = NULL) {
  if (!user_access($string, $account)) {
    return FALSE;
  }
  if (!isset($_POST['token'])) {
    return FALSE;
  }
  if (!isset($_POST['input']) || !is_string($_POST['input'])) {
    return FALSE;
  }
  if (!isset($_POST['format']) || empty($_POST['format'])) {
    return FALSE;
  }
  if (drupal_valid_token($_POST['token'], 'ajax-markup', TRUE)) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Creates markup by processing posted input with posted format.
 */
function ajax_markup() {
  $output = '';
  if (($format = filter_format_load($_POST['format'])) && filter_access($format)) {
    $format_id = $format->format;
  }
  else {
    $format_id = filter_fallback_format();
  }
  $output = check_markup($_POST['input'], $format_id);
  return array(
    'output' => $output,
  );
}
